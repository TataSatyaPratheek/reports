[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "tourism-rag-chatbot"
version = "3.0.0"
description = "Tourism-focused RAG chatbot with hybrid retrieval, multimodal support, and specialized tourism analysis"
authors = [
    {name = "Satya Pratheek Tata", email = "satyapratheek.tata@edhec.com"},
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core dependencies
    "streamlit>=1.45.0",
    "chromadb>=0.5.3",
    "rank-bm25>=0.2.2",
    "langchain-core>=0.2.0",
    "langchain-community>=0.0.10",
    "openparse==0.7.0",
    "sentence-transformers>=2.7.0",
    "ollama>=0.3.0",
    "pydantic>=1.10.11,<2.0.0",     # Downgraded to resolve conflicts
    "cachetools>=5.3.1",
    
    # Performance enhancements
    "flash-attn>=2.5.0",
    # Jina moved to optional dependencies to resolve conflicts
    
    # Tourism-specific dependencies
    "nltk>=3.8.1",
    "spacy>=3.8.0",
    "psutil>=5.9.8",
    "PyMuPDF>=1.23.0",
    "altair>=5.2.0",
    "pandas>=2.1.0",
    
    # Interface & UX
    "chainlit>=1.0.0,<2.0.0",       # Pin to v1 to avoid uvicorn conflicts
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "playwright>=1.45.0",
    
    # Code quality
    "mypy>=1.9.0",
    "types-psutil>=5.9.5.20240301",
    "ruff>=0.2.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    
    # Performance testing
    "locust>=2.19.0",
]

tourism = [
    "pycountry>=23.12.0",
    "forex-python>=1.8.0",
    "geopy>=2.4.0",
    "python-dateutil>=2.8.2",
]

# New optional dependency for jina (use when needed)
jina-extras = [
    "jina<3.25.0",  # Using older jina that works with pydantic 1.x
]

# New optional dependency for modern pydantic (use when not using jina)
modern-pydantic = [
    "pydantic>=2.7.0",  # For when you need the latest pydantic features
]

[tool.pdm.scripts]
# Core scripts
start = "streamlit run app.py"
start_chainlit = "chainlit run chainlit_app.py"
test = "pytest -n auto --cov=modules"
lint = "ruff check . --fix"
format = "black . && isort ."
types = "mypy --strict modules/"

# Additional scripts
benchmark = "locust -f tests/load_test.py"
download_spacy = "python -m spacy download en_core_web_sm"
setup_tourism = "bash setup.sh"

[tool.pdm.resolution.overrides]
# Force specific versions to resolve conflicts
"pydantic" = ">=1.10.11,<2.0.0"  # Force pydantic v1 for compatibility
"uvicorn" = ">=0.23.2,<0.24.0"   # Pin uvicorn to version compatible with both chainlit and jina-extras

[tool.ruff]
line-length = 120
target-version = "py310"
select = ["E", "F", "W", "I", "B", "C90"]
ignore = ["E501"]  # Line length handled by black

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr"]